// Generated by view binder compiler. Do not edit!
package com.example.projectmanagement.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.projectmanagement.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProjectsTasksBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnSubmitTask;

  @NonNull
  public final EditText dteTaskDeadline;

  @NonNull
  public final EditText edtTaskName;

  @NonNull
  public final Guideline guideline16;

  @NonNull
  public final Guideline guideline20;

  @NonNull
  public final Guideline guideline22;

  @NonNull
  public final Guideline guideline23;

  @NonNull
  public final Spinner spinnerAssignedUser;

  @NonNull
  public final TextView txtAssigned;

  @NonNull
  public final TextView txtAssignedUser;

  @NonNull
  public final TextView txtDatePicker;

  @NonNull
  public final TextView txtTaskName;

  @NonNull
  public final TextView txtTaskStatus;

  private ActivityProjectsTasksBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnSubmitTask, @NonNull EditText dteTaskDeadline,
      @NonNull EditText edtTaskName, @NonNull Guideline guideline16, @NonNull Guideline guideline20,
      @NonNull Guideline guideline22, @NonNull Guideline guideline23,
      @NonNull Spinner spinnerAssignedUser, @NonNull TextView txtAssigned,
      @NonNull TextView txtAssignedUser, @NonNull TextView txtDatePicker,
      @NonNull TextView txtTaskName, @NonNull TextView txtTaskStatus) {
    this.rootView = rootView;
    this.btnSubmitTask = btnSubmitTask;
    this.dteTaskDeadline = dteTaskDeadline;
    this.edtTaskName = edtTaskName;
    this.guideline16 = guideline16;
    this.guideline20 = guideline20;
    this.guideline22 = guideline22;
    this.guideline23 = guideline23;
    this.spinnerAssignedUser = spinnerAssignedUser;
    this.txtAssigned = txtAssigned;
    this.txtAssignedUser = txtAssignedUser;
    this.txtDatePicker = txtDatePicker;
    this.txtTaskName = txtTaskName;
    this.txtTaskStatus = txtTaskStatus;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProjectsTasksBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProjectsTasksBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_projects_tasks, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProjectsTasksBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSubmitTask;
      Button btnSubmitTask = ViewBindings.findChildViewById(rootView, id);
      if (btnSubmitTask == null) {
        break missingId;
      }

      id = R.id.dteTaskDeadline;
      EditText dteTaskDeadline = ViewBindings.findChildViewById(rootView, id);
      if (dteTaskDeadline == null) {
        break missingId;
      }

      id = R.id.edtTaskName;
      EditText edtTaskName = ViewBindings.findChildViewById(rootView, id);
      if (edtTaskName == null) {
        break missingId;
      }

      id = R.id.guideline16;
      Guideline guideline16 = ViewBindings.findChildViewById(rootView, id);
      if (guideline16 == null) {
        break missingId;
      }

      id = R.id.guideline20;
      Guideline guideline20 = ViewBindings.findChildViewById(rootView, id);
      if (guideline20 == null) {
        break missingId;
      }

      id = R.id.guideline22;
      Guideline guideline22 = ViewBindings.findChildViewById(rootView, id);
      if (guideline22 == null) {
        break missingId;
      }

      id = R.id.guideline23;
      Guideline guideline23 = ViewBindings.findChildViewById(rootView, id);
      if (guideline23 == null) {
        break missingId;
      }

      id = R.id.spinnerAssignedUser;
      Spinner spinnerAssignedUser = ViewBindings.findChildViewById(rootView, id);
      if (spinnerAssignedUser == null) {
        break missingId;
      }

      id = R.id.txtAssigned;
      TextView txtAssigned = ViewBindings.findChildViewById(rootView, id);
      if (txtAssigned == null) {
        break missingId;
      }

      id = R.id.txtAssignedUser;
      TextView txtAssignedUser = ViewBindings.findChildViewById(rootView, id);
      if (txtAssignedUser == null) {
        break missingId;
      }

      id = R.id.txtDatePicker;
      TextView txtDatePicker = ViewBindings.findChildViewById(rootView, id);
      if (txtDatePicker == null) {
        break missingId;
      }

      id = R.id.txtTaskName;
      TextView txtTaskName = ViewBindings.findChildViewById(rootView, id);
      if (txtTaskName == null) {
        break missingId;
      }

      id = R.id.txtTaskStatus;
      TextView txtTaskStatus = ViewBindings.findChildViewById(rootView, id);
      if (txtTaskStatus == null) {
        break missingId;
      }

      return new ActivityProjectsTasksBinding((ConstraintLayout) rootView, btnSubmitTask,
          dteTaskDeadline, edtTaskName, guideline16, guideline20, guideline22, guideline23,
          spinnerAssignedUser, txtAssigned, txtAssignedUser, txtDatePicker, txtTaskName,
          txtTaskStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
